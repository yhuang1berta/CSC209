Compiling and running sanity check.

ERROR: Sanity check does not pass.

=================================================================
==18375==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe4241552c at pc 0x7fc63252a66e bp 0x7ffe42414eb0 sp 0x7ffe42414658
READ of size 77 at 0x7ffe4241552c thread T0
    #0 0x7fc63252a66d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)
    #1 0x55dc820e7fcc in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:200
    #2 0x7fc632109b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #3 0x55dc820e64d9 in _start (/home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects+0x14d9)

Address 0x7ffe4241552c is located in stack of thread T0 at offset 1388 in frame
    #0 0x55dc820e7b6d in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:160

  This frame has 21 object(s):
    [32, 40) 'leftover'
    [96, 104) 'processed_str'
    [160, 168) 'processed_str'
    [224, 232) 'line_num_str'
    [288, 296) 'processed_str'
    [352, 360) 'processed_str'
    [416, 424) 'processed_str'
    [480, 488) 'processed_str'
    [544, 552) 'processed_str'
    [608, 616) 'line_num_str'
    [672, 680) 'processed_str'
    [736, 744) 'processed_str'
    [800, 802) 's1'
    [864, 866) 's2'
    [928, 930) 's3'
    [992, 994) 's4'
    [1056, 1058) 's1'
    [1120, 1122) 's2'
    [1184, 1186) 's3'
    [1248, 1250) 's4'
    [1312, 1388) 'string' <== Memory access at offset 1388 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d) 
Shadow bytes around the buggy address:
  0x10004847aa50: f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x10004847aa60: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x10004847aa70: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x10004847aa80: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x10004847aa90: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 00 00 00 00
=>0x10004847aaa0: 00 00 00 00 00[04]f2 f2 00 00 00 00 00 00 00 00
  0x10004847aab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004847aac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004847aad0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004847aae0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004847aaf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18375==ABORTING
=================================================================
==18380==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe966acebc at pc 0x7f6b4c87666e bp 0x7ffe966ac840 sp 0x7ffe966abfe8
READ of size 77 at 0x7ffe966acebc thread T0
    #0 0x7f6b4c87666d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)
    #1 0x5592f5522fcc in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:200
    #2 0x7f6b4c455b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #3 0x5592f55214d9 in _start (/home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects+0x14d9)

Address 0x7ffe966acebc is located in stack of thread T0 at offset 1388 in frame
    #0 0x5592f5522b6d in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:160

  This frame has 21 object(s):
    [32, 40) 'leftover'
    [96, 104) 'processed_str'
    [160, 168) 'processed_str'
    [224, 232) 'line_num_str'
    [288, 296) 'processed_str'
    [352, 360) 'processed_str'
    [416, 424) 'processed_str'
    [480, 488) 'processed_str'
    [544, 552) 'processed_str'
    [608, 616) 'line_num_str'
    [672, 680) 'processed_str'
    [736, 744) 'processed_str'
    [800, 802) 's1'
    [864, 866) 's2'
    [928, 930) 's3'
    [992, 994) 's4'
    [1056, 1058) 's1'
    [1120, 1122) 's2'
    [1184, 1186) 's3'
    [1248, 1250) 's4'
    [1312, 1388) 'string' <== Memory access at offset 1388 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d) 
Shadow bytes around the buggy address:
  0x100052ccd980: f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 02 f2
  0x100052ccd990: f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2
  0x100052ccd9a0: f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2
  0x100052ccd9b0: f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2
  0x100052ccd9c0: f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 00 00
=>0x100052ccd9d0: 00 00 00 00 00 00 00[04]f2 f2 00 00 00 00 00 00
  0x100052ccd9e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052ccd9f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052ccda00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052ccda10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052ccda20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18380==ABORTING
=================================================================
==18386==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffeaed6938c at pc 0x7f2b9f90b66e bp 0x7ffeaed68d10 sp 0x7ffeaed684b8
READ of size 77 at 0x7ffeaed6938c thread T0
    #0 0x7f2b9f90b66d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)
    #1 0x561797cf34d6 in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:626
    #2 0x7f2b9f4eab96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #3 0x561797cef4d9 in _start (/home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects+0x14d9)

Address 0x7ffeaed6938c is located in stack of thread T0 at offset 1388 in frame
    #0 0x561797cf0b6d in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:160

  This frame has 21 object(s):
    [32, 40) 'leftover'
    [96, 104) 'processed_str'
    [160, 168) 'processed_str'
    [224, 232) 'line_num_str'
    [288, 296) 'processed_str'
    [352, 360) 'processed_str'
    [416, 424) 'processed_str'
    [480, 488) 'processed_str'
    [544, 552) 'processed_str'
    [608, 616) 'line_num_str'
    [672, 680) 'processed_str'
    [736, 744) 'processed_str'
    [800, 802) 's1'
    [864, 866) 's2'
    [928, 930) 's3'
    [992, 994) 's4'
    [1056, 1058) 's1'
    [1120, 1122) 's2'
    [1184, 1186) 's3'
    [1248, 1250) 's4'
    [1312, 1388) 'string' <== Memory access at offset 1388 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d) 
Shadow bytes around the buggy address:
  0x100055da5220: 00 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2
  0x100055da5230: 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2
  0x100055da5240: 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2
  0x100055da5250: 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2
  0x100055da5260: 02 f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00
=>0x100055da5270: 00[04]f2 f2 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055da5280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055da5290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055da52a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055da52b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055da52c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18386==ABORTING
=================================================================
==18396==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffce4a2e18c at pc 0x7f45f4dc666e bp 0x7ffce4a2db10 sp 0x7ffce4a2d2b8
READ of size 77 at 0x7ffce4a2e18c thread T0
    #0 0x7f45f4dc666d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)
    #1 0x55ca0df704d6 in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:626
    #2 0x7f45f49a5b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #3 0x55ca0df6c4d9 in _start (/home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects+0x14d9)

Address 0x7ffce4a2e18c is located in stack of thread T0 at offset 1388 in frame
    #0 0x55ca0df6db6d in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:160

  This frame has 21 object(s):
    [32, 40) 'leftover'
    [96, 104) 'processed_str'
    [160, 168) 'processed_str'
    [224, 232) 'line_num_str'
    [288, 296) 'processed_str'
    [352, 360) 'processed_str'
    [416, 424) 'processed_str'
    [480, 488) 'processed_str'
    [544, 552) 'processed_str'
    [608, 616) 'line_num_str'
    [672, 680) 'processed_str'
    [736, 744) 'processed_str'
    [800, 802) 's1'
    [864, 866) 's2'
    [928, 930) 's3'
    [992, 994) 's4'
    [1056, 1058) 's1'
    [1120, 1122) 's2'
    [1184, 1186) 's3'
    [1248, 1250) 's4'
    [1312, 1388) 'string' <== Memory access at offset 1388 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d) 
Shadow bytes around the buggy address:
  0x10001c93dbe0: 00 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2
  0x10001c93dbf0: 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2
  0x10001c93dc00: 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2
  0x10001c93dc10: 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2
  0x10001c93dc20: 02 f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00
=>0x10001c93dc30: 00[04]f2 f2 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001c93dc40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001c93dc50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001c93dc60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001c93dc70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001c93dc80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18396==ABORTING
=================================================================
==18408==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffdeb77742c at pc 0x7ff9ed9f766e bp 0x7ffdeb776db0 sp 0x7ffdeb776558
READ of size 77 at 0x7ffdeb77742c thread T0
    #0 0x7ff9ed9f766d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)
    #1 0x55a01e4d4fcc in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:200
    #2 0x7ff9ed5d6b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #3 0x55a01e4d34d9 in _start (/home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects+0x14d9)

Address 0x7ffdeb77742c is located in stack of thread T0 at offset 1388 in frame
    #0 0x55a01e4d4b6d in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:160

  This frame has 21 object(s):
    [32, 40) 'leftover'
    [96, 104) 'processed_str'
    [160, 168) 'processed_str'
    [224, 232) 'line_num_str'
    [288, 296) 'processed_str'
    [352, 360) 'processed_str'
    [416, 424) 'processed_str'
    [480, 488) 'processed_str'
    [544, 552) 'processed_str'
    [608, 616) 'line_num_str'
    [672, 680) 'processed_str'
    [736, 744) 'processed_str'
    [800, 802) 's1'
    [864, 866) 's2'
    [928, 930) 's3'
    [992, 994) 's4'
    [1056, 1058) 's1'
    [1120, 1122) 's2'
    [1184, 1186) 's3'
    [1248, 1250) 's4'
    [1312, 1388) 'string' <== Memory access at offset 1388 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d) 
Shadow bytes around the buggy address:
  0x10003d6e6e30: f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x10003d6e6e40: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x10003d6e6e50: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x10003d6e6e60: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x10003d6e6e70: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 00 00 00 00
=>0x10003d6e6e80: 00 00 00 00 00[04]f2 f2 00 00 00 00 00 00 00 00
  0x10003d6e6e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d6e6ea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d6e6eb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d6e6ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d6e6ed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18408==ABORTING
=================================================================
==18422==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd1c8d895c at pc 0x7fe99a1df66e bp 0x7ffd1c8d82e0 sp 0x7ffd1c8d7a88
READ of size 77 at 0x7ffd1c8d895c thread T0
    #0 0x7fe99a1df66d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)
    #1 0x55ad36905fcc in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:200
    #2 0x7fe999dbeb96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #3 0x55ad369044d9 in _start (/home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects+0x14d9)

Address 0x7ffd1c8d895c is located in stack of thread T0 at offset 1388 in frame
    #0 0x55ad36905b6d in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:160

  This frame has 21 object(s):
    [32, 40) 'leftover'
    [96, 104) 'processed_str'
    [160, 168) 'processed_str'
    [224, 232) 'line_num_str'
    [288, 296) 'processed_str'
    [352, 360) 'processed_str'
    [416, 424) 'processed_str'
    [480, 488) 'processed_str'
    [544, 552) 'processed_str'
    [608, 616) 'line_num_str'
    [672, 680) 'processed_str'
    [736, 744) 'processed_str'
    [800, 802) 's1'
    [864, 866) 's2'
    [928, 930) 's3'
    [992, 994) 's4'
    [1056, 1058) 's1'
    [1120, 1122) 's2'
    [1184, 1186) 's3'
    [1248, 1250) 's4'
    [1312, 1388) 'string' <== Memory access at offset 1388 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d) 
Shadow bytes around the buggy address:
  0x1000239130d0: f2 f2 00 f2 f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f2 f2
  0x1000239130e0: f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2
  0x1000239130f0: f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2
  0x100023913100: f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2
  0x100023913110: f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2
=>0x100023913120: f2 f2 00 00 00 00 00 00 00 00 00[04]f2 f2 00 00
  0x100023913130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023913140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023913150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023913160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023913170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18422==ABORTING
=================================================================
==18440==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc1cf746ec at pc 0x7f224118f66e bp 0x7ffc1cf74070 sp 0x7ffc1cf73818
READ of size 77 at 0x7ffc1cf746ec thread T0
    #0 0x7f224118f66d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)
    #1 0x561d2af72fcc in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:200
    #2 0x7f2240d6eb96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #3 0x561d2af714d9 in _start (/home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects+0x14d9)

Address 0x7ffc1cf746ec is located in stack of thread T0 at offset 1388 in frame
    #0 0x561d2af72b6d in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:160

  This frame has 21 object(s):
    [32, 40) 'leftover'
    [96, 104) 'processed_str'
    [160, 168) 'processed_str'
    [224, 232) 'line_num_str'
    [288, 296) 'processed_str'
    [352, 360) 'processed_str'
    [416, 424) 'processed_str'
    [480, 488) 'processed_str'
    [544, 552) 'processed_str'
    [608, 616) 'line_num_str'
    [672, 680) 'processed_str'
    [736, 744) 'processed_str'
    [800, 802) 's1'
    [864, 866) 's2'
    [928, 930) 's3'
    [992, 994) 's4'
    [1056, 1058) 's1'
    [1120, 1122) 's2'
    [1184, 1186) 's3'
    [1248, 1250) 's4'
    [1312, 1388) 'string' <== Memory access at offset 1388 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d) 
Shadow bytes around the buggy address:
  0x1000039e6880: f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 00 f2 f2 f2
  0x1000039e6890: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x1000039e68a0: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x1000039e68b0: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
  0x1000039e68c0: f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2 f2 f2
=>0x1000039e68d0: f2 f2 f2 f2 00 00 00 00 00 00 00 00 00[04]f2 f2
  0x1000039e68e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000039e68f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000039e6900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000039e6910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000039e6920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18440==ABORTING
=================================================================
==18443==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd04fc81fc at pc 0x7fa055ce066e bp 0x7ffd04fc7b80 sp 0x7ffd04fc7328
READ of size 77 at 0x7ffd04fc81fc thread T0
    #0 0x7fa055ce066d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)
    #1 0x5620a57694d6 in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:626
    #2 0x7fa0558bfb96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #3 0x5620a57654d9 in _start (/home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects+0x14d9)

Address 0x7ffd04fc81fc is located in stack of thread T0 at offset 1388 in frame
    #0 0x5620a5766b6d in main /home/ilir/csc209/tutorials/w20/Mark_a1/pam/submissions/huang853/a1/effects.c:160

  This frame has 21 object(s):
    [32, 40) 'leftover'
    [96, 104) 'processed_str'
    [160, 168) 'processed_str'
    [224, 232) 'line_num_str'
    [288, 296) 'processed_str'
    [352, 360) 'processed_str'
    [416, 424) 'processed_str'
    [480, 488) 'processed_str'
    [544, 552) 'processed_str'
    [608, 616) 'line_num_str'
    [672, 680) 'processed_str'
    [736, 744) 'processed_str'
    [800, 802) 's1'
    [864, 866) 's2'
    [928, 930) 's3'
    [992, 994) 's4'
    [1056, 1058) 's1'
    [1120, 1122) 's2'
    [1184, 1186) 's3'
    [1248, 1250) 's4'
    [1312, 1388) 'string' <== Memory access at offset 1388 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d) 
Shadow bytes around the buggy address:
  0x1000209f0fe0: f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 00 f2
  0x1000209f0ff0: f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2
  0x1000209f1000: f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2
  0x1000209f1010: f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2
  0x1000209f1020: f2 f2 f2 f2 f2 f2 02 f2 f2 f2 f2 f2 f2 f2 02 f2
=>0x1000209f1030: f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00[04]
  0x1000209f1040: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000209f1050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000209f1060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000209f1070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000209f1080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18443==ABORTING
